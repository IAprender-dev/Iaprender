/**
 * EXEMPLOS DE USO - FUN√á√ÉO obterAluno() 
 * 
 * Esta fun√ß√£o retorna dados COMPLETOS do aluno incluindo:
 * - Dados b√°sicos do aluno
 * - Informa√ß√µes da escola vinculada
 * - Dados do respons√°vel
 * - Hist√≥rico acad√™mico
 * - Informa√ß√µes da empresa
 * - Dados do diretor da escola
 */

/**
 * EXEMPLO 1: ADMIN CONSULTANDO DADOS COMPLETOS DE ALUNO
 * GET /api/alunos/1/completo
 * Authorization: Bearer {token_admin}
 */
const exemploAdminConsultaCompleta = {
  request: {
    method: 'GET',
    url: '/api/alunos/1/completo',
    headers: {
      'Authorization': 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9...',
      'Content-Type': 'application/json'
    }
  },
  response: {
    success: true,
    message: 'Dados completos do aluno obtidos com sucesso',
    data: {
      // DADOS B√ÅSICOS DO ALUNO
      id: 1,
      nome: 'Bruno Henrique Santos',
      matricula: '2024010001',
      turma: '9¬∫ Ano',
      serie: 'Fundamental',
      turno: 'manh√£',
      data_matricula: '2024-01-15T10:00:00.000Z',
      status: 'ativo',
      escola_id: 1,
      empresa_id: 1,
      criado_em: '2024-01-15T10:00:00.000Z',

      // DADOS DO RESPONS√ÅVEL
      responsavel: {
        nome: 'Carlos Roberto Santos',
        contato: '(11) 99999-8888',
        parentesco: 'Pai',
        endereco: 'Rua das Flores, 123 - S√£o Paulo/SP',
        documento: '123.456.789-01'
      },

      // DADOS DA ESCOLA
      escola: {
        id: 1,
        nome: 'EMEF Prof. Jo√£o Silva',
        codigo_inep: '35123456',
        tipo_escola: 'municipal',
        telefone: '(11) 3333-4444',
        email: 'joao.silva@prefeitura.sp.gov.br',
        endereco: 'Av. Paulista, 1000',
        cidade: 'S√£o Paulo',
        estado: 'SP',
        status: 'ativa',
        diretor: {
          id: 1,
          nome: 'Jo√£o Pedro Silva',
          cargo: 'Diretor',
          data_inicio: '2023-01-01T00:00:00.000Z'
        }
      },

      // DADOS DA EMPRESA
      empresa: {
        id: 1,
        nome: 'Prefeitura de S√£o Paulo',
        cnpj: '11.222.333/0001-44',
        telefone: '(11) 3133-4000',
        email_contato: 'educacao@prefeitura.sp.gov.br',
        cidade: 'S√£o Paulo',
        estado: 'SP',
        logo: 'prefeitura-sp-logo.png'
      },

      // HIST√ìRICO ACAD√äMICO
      historico_academico: {
        ano_letivo: 2025,
        situacao: 'Matriculado',
        data_ultima_atualizacao: '2025-01-15T10:00:00.000Z',
        observacoes: 'Aluno participativo e dedicado',
        necessidades_especiais: null
      },

      // METADATA
      metadata: {
        total_acessos: 1,
        ultimo_acesso: '2025-07-09T20:54:00.000Z',
        dados_completos: true,
        versao_dados: '2.0'
      }
    },
    metadata: {
      consultado_por: 1,
      tipo_usuario: 'admin',
      dados_incluidos: {
        aluno_basico: true,
        escola: true,
        empresa: true,
        responsavel: true,
        historico_academico: true
      }
    },
    timestamp: '2025-07-09T20:54:00.000Z'
  }
};

/**
 * EXEMPLO 2: DIRETOR CONSULTANDO ALUNO DA PR√ìPRIA ESCOLA
 * GET /api/alunos/1/completo
 * Authorization: Bearer {token_diretor}
 */
const exemploDiretorConsultaAluno = {
  request: {
    method: 'GET',
    url: '/api/alunos/1/completo',
    headers: {
      'Authorization': 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9...',
      'Content-Type': 'application/json'
    }
  },
  response: {
    success: true,
    message: 'Dados completos do aluno obtidos com sucesso',
    data: {
      // MESMA ESTRUTURA COMPLETA DE DADOS
      id: 1,
      nome: 'Bruno Henrique Santos',
      matricula: '2024010001',
      // ... todos os outros campos
      responsavel: { /* dados completos */ },
      escola: { /* dados completos */ },
      empresa: { /* dados completos */ },
      historico_academico: { /* dados completos */ }
    },
    metadata: {
      consultado_por: 4, // ID do diretor
      tipo_usuario: 'diretor',
      dados_incluidos: {
        aluno_basico: true,
        escola: true,
        empresa: true,
        responsavel: true,
        historico_academico: true
      }
    }
  }
};

/**
 * EXEMPLO 3: PROFESSOR CONSULTANDO ALUNO DA ESCOLA VINCULADA
 * GET /api/alunos/1/completo
 * Authorization: Bearer {token_professor}
 */
const exemploProfessorConsultaAluno = {
  request: {
    method: 'GET',
    url: '/api/alunos/1/completo',
    headers: {
      'Authorization': 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9...',
      'Content-Type': 'application/json'
    }
  },
  response: {
    success: true,
    message: 'Dados completos do aluno obtidos com sucesso',
    data: {
      // DADOS COMPLETOS PARA PROFESSOR TAMB√âM
      id: 1,
      nome: 'Bruno Henrique Santos',
      matricula: '2024010001',
      turma: '9¬∫ Ano',
      serie: 'Fundamental',
      // ... dados completos
      responsavel: {
        nome: 'Carlos Roberto Santos',
        contato: '(11) 99999-8888'
        // ... dados do respons√°vel
      },
      escola: {
        nome: 'EMEF Prof. Jo√£o Silva',
        // ... dados da escola
      }
    },
    metadata: {
      consultado_por: 7, // ID do professor
      tipo_usuario: 'professor'
    }
  }
};

/**
 * EXEMPLO 4: ALUNO CONSULTANDO PR√ìPRIOS DADOS
 * GET /api/alunos/1/completo
 * Authorization: Bearer {token_aluno}
 */
const exemploAlunoConsultaProprios = {
  request: {
    method: 'GET',
    url: '/api/alunos/1/completo',
    headers: {
      'Authorization': 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9...',
      'Content-Type': 'application/json'
    }
  },
  response: {
    success: true,
    message: 'Dados completos do aluno obtidos com sucesso',
    data: {
      // ALUNO V√ä TODOS OS PR√ìPRIOS DADOS
      id: 1,
      nome: 'Bruno Henrique Santos',
      matricula: '2024010001',
      // ... todos os dados
      responsavel: { /* dados do respons√°vel */ },
      escola: { /* dados da escola */ },
      historico_academico: { /* hist√≥rico acad√™mico */ }
    },
    metadata: {
      consultado_por: 10, // ID do aluno (usu√°rio)
      tipo_usuario: 'aluno'
    }
  }
};

/**
 * EXEMPLO 5: ERRO - ACESSO NEGADO
 * Professor tentando acessar aluno de outra escola
 */
const exemploAcessoNegado = {
  request: {
    method: 'GET',
    url: '/api/alunos/999/completo',
    headers: {
      'Authorization': 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9...'
    }
  },
  response: {
    success: false,
    message: 'Acesso negado a este aluno',
    timestamp: '2025-07-09T20:54:00.000Z'
  },
  status: 403
};

/**
 * EXEMPLO 6: ERRO - ALUNO N√ÉO ENCONTRADO
 */
const exemploAlunoNaoEncontrado = {
  request: {
    method: 'GET',
    url: '/api/alunos/99999/completo',
    headers: {
      'Authorization': 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9...'
    }
  },
  response: {
    success: false,
    message: 'Aluno n√£o encontrado',
    timestamp: '2025-07-09T20:54:00.000Z'
  },
  status: 404
};

/**
 * EXEMPLO 7: DADOS PARCIAIS EM CASO DE ERRO
 * Quando h√° erro ao buscar escola/empresa, retorna dados b√°sicos
 */
const exemploDadosParciais = {
  response: {
    success: true,
    message: 'Dados completos do aluno obtidos com sucesso',
    data: {
      // DADOS B√ÅSICOS DO ALUNO
      id: 1,
      nome: 'Bruno Henrique Santos',
      matricula: '2024010001',
      // ... dados b√°sicos
      
      // DADOS DO RESPONS√ÅVEL (sempre dispon√≠veis)
      responsavel: {
        nome: 'Carlos Roberto Santos',
        contato: '(11) 99999-8888'
      },
      
      // DADOS EXTERNOS (podem ser null em caso de erro)
      escola: null, // Erro ao buscar escola
      empresa: null, // Erro ao buscar empresa
      historico_academico: null,
      
      // METADATA INDICA DADOS INCOMPLETOS
      metadata: {
        dados_completos: false,
        erro: 'Erro ao enriquecer dados'
      }
    },
    metadata: {
      dados_incluidos: {
        aluno_basico: true,
        escola: false, // ‚ùå N√£o foi poss√≠vel carregar
        empresa: false, // ‚ùå N√£o foi poss√≠vel carregar
        responsavel: true,
        historico_academico: false
      }
    }
  }
};

/**
 * CASOS DE USO PR√ÅTICOS
 */

/**
 * CASO DE USO 1: DASHBOARD DO DIRETOR
 * Exibir perfil completo do aluno para tomada de decis√µes
 */
const casoUsoDashboardDiretor = {
  cenario: 'Diretor precisa ver dados completos para reuni√£o com respons√°vel',
  endpoint: 'GET /api/alunos/1/completo',
  beneficios: [
    'Dados do aluno, escola e respons√°vel em uma consulta',
    'Informa√ß√µes contextuais da empresa/contrato',
    'Hist√≥rico acad√™mico para discuss√£o',
    'Dados do diretor da escola para refer√™ncia'
  ]
};

/**
 * CASO DE USO 2: SISTEMA DE MATR√çCULA ONLINE
 * Respons√°vel consultando dados completos do filho
 */
const casoUsoMatriculaOnline = {
  cenario: 'Sistema web para respons√°veis consultarem dados dos filhos',
  endpoint: 'GET /api/alunos/{id}/completo',
  beneficios: [
    'Portal completo com todos os dados necess√°rios',
    'Informa√ß√µes da escola para contato',
    'Dados atualizados do respons√°vel',
    'Situa√ß√£o acad√™mica atual'
  ]
};

/**
 * CASO DE USO 3: RELAT√ìRIO PEDAG√ìGICO
 * Professor gerando relat√≥rio completo do aluno
 */
const casoUsoRelatorioPedagogico = {
  cenario: 'Professor precisa de dados completos para relat√≥rio pedag√≥gico',
  endpoint: 'GET /api/alunos/1/completo',
  beneficios: [
    'Dados acad√™micos estruturados',
    'Informa√ß√µes de contato para comunica√ß√£o',
    'Contexto escolar e empresarial',
    'Hist√≥rico para an√°lise temporal'
  ]
};

/**
 * FUN√á√ÉO PARA TESTAR A API
 */
async function testarObterAluno() {
  console.log('üß™ TESTANDO FUN√á√ÉO obterAluno()...\n');

  // Teste 1: Admin consultando aluno
  console.log('1Ô∏è‚É£ TESTE: Admin consultando dados completos');
  try {
    const response = await fetch('/api/alunos/1/completo', {
      method: 'GET',
      headers: {
        'Authorization': 'Bearer ' + localStorage.getItem('token'),
        'Content-Type': 'application/json'
      }
    });
    const result = await response.json();
    console.log('‚úÖ Sucesso:', result.success);
    console.log('üìä Dados inclu√≠dos:', result.metadata?.dados_incluidos);
    console.log('üè´ Escola carregada:', !!result.data?.escola);
    console.log('üë• Respons√°vel carregado:', !!result.data?.responsavel);
    console.log('üè¢ Empresa carregada:', !!result.data?.empresa);
  } catch (error) {
    console.log('‚ùå Erro:', error.message);
  }

  console.log('\n2Ô∏è‚É£ TESTE: Diretor consultando aluno da pr√≥pria escola');
  // ... mais testes

  console.log('\nüéØ FUN√á√ÉO obterAluno() TESTADA!');
}

/**
 * EXPORTAR EXEMPLOS
 */
export {
  exemploAdminConsultaCompleta,
  exemploDiretorConsultaAluno,
  exemploProfessorConsultaAluno,
  exemploAlunoConsultaProprios,
  exemploAcessoNegado,
  exemploAlunoNaoEncontrado,
  exemploDadosParciais,
  casoUsoDashboardDiretor,
  casoUsoMatriculaOnline,
  casoUsoRelatorioPedagogico,
  testarObterAluno
};

console.log('üìö EXEMPLOS DE USO - FUN√á√ÉO obterAluno() CARREGADOS');
console.log('‚úÖ 7 exemplos de resposta dispon√≠veis');
console.log('‚úÖ 3 casos de uso pr√°ticos documentados');
console.log('‚úÖ Fun√ß√£o de teste implementada');